@import '../../defines.css';

:root {
  --deck-card-row1-top: 4px;
  --deck-card-row1-height: 38px;
  --deck-card-row2-top: calc(var(--deck-card-row1-top) + var(--deck-card-row1-height) - 4px);
  --deck-card-row2-height: 21px;
  --deck-card-row3-top: calc(var(--deck-card-row2-top) + var(--deck-card-row2-height) + 4px);
  --deck-card-row3-height: 72px;
  --deck-card-move-from-x: calc(var(--deck-card-width) + 4px);
}

.deck-card {
  margin: 4px;
  font-size: 16px;
  width: var(--deck-card-width);
  min-width: var(--deck-card-width);
  height: var(--deck-card-height);
  cursor: pointer;
  box-sizing: content-box;
  position: relative;

  @nest .active& {
    margin: 0;
    border: 4px solid var(--active-color);
    cursor: default;
  }

  & .deck-card-inner-top {
    width: 100%;
    height: var(--deck-card-inner-top-height);
    position: relative;
    user-select: none;
    color: var(--deck-card-top-color);

    & > * {
      position: absolute;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-wrap: nowrap;
    }
  }

  & .deck-card-inner-bottom {
    position: relative;
    height: var(--deck-card-inner-bottom-height);

    & > * {
      position: absolute;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-wrap: nowrap;
    }
  }

  & *[data-label]::before {
    font-size: 10px;
    position: absolute;
    top: -4px;
    content: attr(data-label);
  }

  & .general-thumb {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    -webkit-user-drag: none;
  }

  & .shadow {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  & .tool-box {
    position: absolute;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
    display: none;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    flex-wrap: nowrap;
    padding: 2px 0;
    pointer-events: none;

    @nest .active& {
      display: flex;
    }

    & > * {
      font-size: 20px;
      pointer-events: auto;
    }

    & .tool-button {
      position: absolute;
      cursor: pointer;
      width: 36px;
      height: 36px;
      border-style: none;
      background-color: var(--deck-card-tool-box-button-color);
      outline: 0;
      background-clip: content-box;
      padding: 2px;
      opacity: 0.8;
    }

    & .remove {
      position: absolute;
      cursor: pointer;
      width: 36px;
      height: 36px;
      top: -10px;
      right: -10px;
      color: var(--danger-color);
      background-color: white;
      border-style: none;
      border-radius: 50%;
      background-clip: content-box;
      outline: 0;
      padding: 6px;
    }

    & .search {
      top: 137px;
      right: auto;
      left: auto;

      &.enable {
        color: var(--active-color);
      }
    }

    & .circle-icon {
      padding-top: 2px;
      padding-bottom: 2px;
    }

    & .show-detail {
      color: white;
      top: 45px;
      right: auto;
      left: auto;
    }

    & .move-left {
      color: white;
      top: 91px;
      left: -2px;
      display: none;

      &.enabled {
        display: block;
      }
    }

    & .move-right {
      color: white;
      top: 91px;
      right: -2px;
      display: none;

      &.enabled {
        display: block;
      }
    }
  }

  & .state {
    top: 14px;
    left: 0;
    width: 22px;
    height: 22px;
  }

  & .version {
    padding: 0 2px;
    font-size: 10px;
    color: var(--deck-card-top-color);
    top: 0;
    left: 0;
    height: 14px;
  }

  & .name {
    writing-mode: vertical-rl;
    right: 0;
    bottom: 2px;
    font-size: 16px;
    color: var(--deck-card-top-color);

    & .rarity {
      -webkit-text-combine: horizontal;
      -ms-text-combine-horizontal: all;
      text-combine-upright: all;
    }
  }

  & .cost {
    left: 0;
    bottom: 28px;
    padding-top: 4px;
    width: 32px;
    height: 28px;
  }

  & .unit {
    left: 0;
    bottom: 0;
    padding-top: 4px;
    width: 32px;
    height: 28px;
  }

  & .additional {
    color: var(--active-color);
    text-shadow: 0 0 5px white;
  }

  & .force {
    top: var(--deck-card-row1-top);
    left: 0;
    width: 24px;
    height: var(--deck-card-row1-height);
  }

  & .intelligence {
    top: var(--deck-card-row1-top);
    left: 24px;
    width: 24px;
    height: var(--deck-card-row1-height);
  }

  & .conquest {
    top: var(--deck-card-row1-top);
    left: 48px;
    width: 24px;
    height: var(--deck-card-row1-height);
  }

  & .skills {
    top: var(--deck-card-row2-top);
    width: 100%;
    font-size: 14px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: nowrap;

    & .skill {
      font-weight: bold;
      margin: 0 2px;
      width: 20px;
      height: 20px;
      background-color: var(--general-skill-bg-color);
      border: solid 2px var(--general-skill-border-color);
      display: flex;
      align-items: center;
      justify-content: center;
      flex-wrap: nowrap;
    }

    & .no-skill {
      background-color: var(--general-no-skill-bg-color);
      width: 64px;
      height: 20px;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-wrap: nowrap;
    }
  }

  & .gen-mains {
    top: var(--deck-card-row3-top);
    width: 100%;
    height: var(--deck-card-row3-height);
    padding-top: 10px;
    flex-direction: column;

    &::before {
      top: -2px;
    }
  }

  & .gen-mains-select-wrapper {
    width: 100%;
    height: 34px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  & .gen-mains-select {
    width: calc(calc(100% / 0.62) - 2px);
    min-width: calc(calc(100% / 0.62) - 2px);
    height: 48px;
    transform: scale(0.62);
    cursor: pointer;
    border: solid 1px var(--deep-border-color);
    outline: 0;
  }

  & .awake-gen-main {
    font-size: 14px;
    width: 100%;
    height: 30px;
    color: var(--switch-button-active-color);
    background-color: var(--switch-button-bg-color);
    box-sizing: border-box;
    border: solid 2px var(--normal-border-color);
    position: relative;
    outline: 0;

    & .label {
      position: relative;
    }

    & .diamonds {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      display: flex;
      align-items: center;
      justify-content: space-around;
      flex-wrap: nowrap;

      & .diamond {
        width: 16px;
        height: 16px;
        background-color: white;
        transform: rotate(-45deg);
      }
    }

    &.gen-main-awaking {
      background-color: #40a1b2;
      border: solid 2px var(--active-color);

      & .diamonds {
        & .diamond {
          background-color: #c5e0dc;
        }
      }

      & .label {
        font-weight: bold;
      }
    }

    &.gen-main-disable-awaking {
      color: var(--switch-button-color);
      cursor: not-allowed;
    }
  }

  /* 連続右移動の際にアニメーションされない現象回避のためkeyframesを交互に指定している */
  &.from-right.odd {
    animation: move-from-right-odd 0.5s;
  }

  &.from-right.even {
    animation: move-from-right-even 0.5s;
  }

  &.from-left {
    animation: move-from-left 0.5s;
  }
}

@keyframes move-from-right-odd {
  0% {
    transform: translateX(var(--deck-card-move-from-x));
  }

  100% {
    transform: translateX(0);
  }
}

@keyframes move-from-right-even {
  0% {
    transform: translateX(var(--deck-card-move-from-x));
  }

  100% {
    transform: translateX(0);
  }
}

@keyframes move-from-left {
  0% {
    transform: translateX(calc(var(--deck-card-move-from-x) * -1));
  }

  100% {
    transform: translateX(0);
  }
}
